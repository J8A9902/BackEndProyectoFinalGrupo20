# [START cloudbuild]
# This step builds the container image.
steps:
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/abc-jobs-repository/proyectos:$SHORT_SHA'
  - './proyectos'

# This step pushes the image to Artifact Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/abc-jobs-repository/proyectos:$SHORT_SHA'
# [END cloudbuild]

# [START cloudbuild-trigger-cd]
# This step clones the abcjobs-cloudbuild-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    gcloud source repos clone abcjobs-cloudbuild-env && \
    cd abcjobs-cloudbuild-env && \
    git checkout proyectos-candidate && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" proyectos/kubernetes/kubernetes.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > abcjobs-cloudbuild-env/kubernetes.yaml

# This step pushes the manifest back to abcjobs-cloudbuild-env
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd abcjobs-cloudbuild-env && \
    git add kubernetes.yaml && \
    git commit -m "Deploying image us-central1-docker.pkg.dev/$PROJECT_ID/abc-jobs-repository/proyectos:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository abc-jobs-repository
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin proyectos-candidate

# [END cloudbuild-trigger-cd]
