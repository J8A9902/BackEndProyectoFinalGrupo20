name: "Automerge microservice Auth"

on:
  push:
    branches:
      - main
      - develop
      - 'feature-**'
    paths:
      - 'auth/**'
  workflow_dispatch:

jobs:
  unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    outputs:
      test-coverage: ${{ steps.test-coverage.outputs.success }}
    steps:
      - uses: actions/checkout@main
      - name: Configuración de entorno de python
        uses: actions/setup-python@main
        with:
            python-version: '3.9'
      - name: Install environment
        working-directory: ./auth
        run: |
          pip install pipenv
          pipenv sync --system --dev
          pip install -r requirements.txt
          export VIRTUAL_ENV="$(pipenv --venv)" PATH="$(pipenv --venv)/bin:$PATH"
      - name: Run unit tests
        id: correr-pruebas
        working-directory: ./auth
        run: |
          coverage run -m pytest -s tests
          coverage report -m --fail-under=80
          coverage xml -o coverage.xml
      - name: Validar resultado de coverage
        id: test-coverage
        if: ${{ success() }}
        run: echo "success=true" >> $GITHUB_OUTPUT
      - name: Upload coverage report
        uses: actions/upload-artifact@main
        with:
          name: coverage-report
          path: auth/coverage.xml

  sonarcloud:
    uses: ./.github/workflows/sonarcloud.yml
    needs: unit-test
    with:
      service: "auth"
    secrets:
      sonar_token: ${{ secrets.SONAR_TOKEN }}

  detect-keyword:
    uses: ./.github/workflows/detect-keyword.yml
    needs: sonarcloud

  update-feature-branch:
    uses: ./.github/workflows/update-feature-branch.yml
    needs: detect-keyword
    with:
      finished-feature: ${{ needs.detect-keyword.outputs.finished-detected }}
      create-release: ${{ needs.detect-keyword.outputs.release-detected }}

  commit-message:
    needs: [ detect-keyword, update-feature-branch ]
    name: Set commit message
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.set-feature-message.outputs.message }}${{ steps.set-release-message.outputs.message }}
    if: ${{ needs.detect-keyword.outputs.feature-detected == 'true' }} || ${{ needs.detect-keyword.outputs.release-detected == 'true' }}
    steps:
      - name: Set feature message
        id: set-feature-message
        if: ${{ needs.detect-keyword.outputs.feature-detected == 'true' }}
        env:
          COMMIT_MESSAGE: Mezcla automática de ${{ github.ref }} en la rama develop
        run: echo "message=${COMMIT_MESSAGE}" >> $GITHUB_OUTPUT
      - name: Set release message
        id: set-release-message
        if: ${{ needs.detect-keyword.outputs.release-detected == 'true' }}
        env:
          COMMIT_MESSAGE: Mezcla automática de ${{ github.ref }} en develop con nuevo [release]
        run: echo "message=${COMMIT_MESSAGE}" >> $GITHUB_OUTPUT

  merge:
    needs: [ unit-test, commit-message ]
    name: Merge de feature en develop
    runs-on: ubuntu-latest
    if: ${{ needs.unit-test.outputs.test-coverage }}
    steps:
      - name: Mezcla feature -> develop
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: ${{ github.ref }}
          target-branch: develop
          commit-message: ${{ needs.commit-message.outputs.message }}